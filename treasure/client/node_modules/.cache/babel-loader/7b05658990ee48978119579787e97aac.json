{"ast":null,"code":"var _jsxFileName = \"/Users/Ambee/Desktop/Homework/Treasure-App/treasure/client/src/components/Cart/Cart.js\";\nimport React from \"react\";\nimport ProductList from \"../ProductList/ProductList\";\nimport Summary from \"../Summary/Summary\";\nimport Header from \"../Header/Header\"; // import \"../../camara.json\";\n\nimport \"./Cart.css\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeProductQuantity = (index, event) => {\n      const products = this.state.products;\n      const value = event.target.value;\n      const valueInt = parseInt(value); // Minimum quantity is 1, maximum quantity is 100, can left blank to input easily\n\n      if (value === \"\") {\n        products[index].quantity = value;\n      } else if (valueInt > 0 && valueInt < 100) {\n        products[index].quantity = valueInt;\n      }\n\n      this.setState({\n        products\n      });\n    };\n\n    this.onRemoveProduct = i => {\n      const products = this.state.products.filter((product, index) => {\n        return index != i;\n      });\n      this.setState({\n        products\n      });\n    };\n\n    this.onEnterPromoCode = event => {\n      this.setState({\n        promoCode: event.target.value\n      });\n    };\n\n    this.checkPromoCode = () => {\n      const promotions = this.state.promotions;\n\n      for (var i = 0; i < promotions.length; i++) {\n        if (this.state.promoCode === promotions[i].code) {\n          this.setState({\n            discount: parseFloat(promotions[i].discount.replace(\"%\", \"\"))\n          });\n          return;\n        }\n      }\n\n      alert(\"Sorry, the Promotional code you entered is not valid!\");\n    };\n\n    this.state = {\n      products: [{\n        image: \"https://via.placeholder.com/200x150\",\n        name: \"PRODUCT ITEM NUMBER 1\",\n        description: \"Description for product item number 1\",\n        price: 5.99,\n        quantity: 2\n      }, {\n        image: \"https://via.placeholder.com/200x150\",\n        name: \"PRODUCT ITEM NUMBER 2\",\n        description: \"Description for product item number 1\",\n        price: 9.99,\n        quantity: 1\n      }],\n      tax: 5,\n      promotions: [{\n        code: \"SUMMER\",\n        discount: \"50%\"\n      }, {\n        code: \"AUTUMN\",\n        discount: \"40%\"\n      }, {\n        code: \"WINTER\",\n        discount: \"30%\"\n      }],\n      promoCode: \"\",\n      discount: 0,\n      itemCount: 0\n    };\n  }\n\n  render() {\n    const products = this.state.products;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Header, {\n      products: products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), products.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(ProductList, {\n      products: products,\n      onChangeProductQuantity: this.onChangeProductQuantity,\n      onRemoveProduct: this.onRemoveProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Summary, {\n      products: products,\n      discount: this.state.discount,\n      tax: this.state.tax,\n      onEnterPromoCode: this.onEnterPromoCode,\n      checkPromoCode: this.checkPromoCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"empty-product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"There are no products in your cart.\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Shopping now\"))); //     function formatCurrency(value) {\n    // return Number(value).toLocaleString(\"en-US\", {\n    //   style: \"currency\",\n    //   currency: \"USD\"\n    // });\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"sources":["/Users/Ambee/Desktop/Homework/Treasure-App/treasure/client/src/components/Cart/Cart.js"],"names":["React","ProductList","Summary","Header","Cart","Component","constructor","props","onChangeProductQuantity","index","event","products","state","value","target","valueInt","parseInt","quantity","setState","onRemoveProduct","i","filter","product","onEnterPromoCode","promoCode","checkPromoCode","promotions","length","code","discount","parseFloat","replace","alert","image","name","description","price","tax","itemCount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ProductList from \"../ProductList/ProductList\";\nimport Summary from \"../Summary/Summary\";\nimport Header from \"../Header/Header\";\n// import \"../../camara.json\";\nimport \"./Cart.css\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      products: [\n        {\n          image: \"https://via.placeholder.com/200x150\",\n          name: \"PRODUCT ITEM NUMBER 1\",\n          description: \"Description for product item number 1\",\n          price: 5.99,\n          quantity: 2\n        },\n        {\n          image: \"https://via.placeholder.com/200x150\",\n          name: \"PRODUCT ITEM NUMBER 2\",\n          description: \"Description for product item number 1\",\n          price: 9.99,\n          quantity: 1\n        }\n      ],\n      tax: 5,\n      promotions: [\n        {\n          code: \"SUMMER\",\n          discount: \"50%\"\n        },\n        {\n          code: \"AUTUMN\",\n          discount: \"40%\"\n        },\n        {\n          code: \"WINTER\",\n          discount: \"30%\"\n        }\n      ],\n      promoCode: \"\",\n      discount: 0,\n      itemCount: 0\n    };\n  }\n\n  onChangeProductQuantity = (index, event) => {\n    const products = this.state.products;\n    const value = event.target.value;\n    const valueInt = parseInt(value);\n\n    // Minimum quantity is 1, maximum quantity is 100, can left blank to input easily\n    if (value === \"\") {\n      products[index].quantity = value;\n    } else if (valueInt > 0 && valueInt < 100) {\n      products[index].quantity = valueInt;\n    }\n\n    this.setState({ products });\n  };\n\n  onRemoveProduct = i => {\n    const products = this.state.products.filter((product, index) => {\n      return index != i;\n    });\n\n    this.setState({ products });\n  };\n\n  onEnterPromoCode = event => {\n    this.setState({\n      promoCode: event.target.value\n    });\n  };\n\n  checkPromoCode = () => {\n    const promotions = this.state.promotions;\n\n    for (var i = 0; i < promotions.length; i++) {\n      if (this.state.promoCode === promotions[i].code) {\n        this.setState({\n          discount: parseFloat(promotions[i].discount.replace(\"%\", \"\"))\n        });\n        return;\n      }\n    }\n\n    alert(\"Sorry, the Promotional code you entered is not valid!\");\n  };\n\n  render() {\n    const products = this.state.products;\n\n    return (\n      <div>\n        <Header products={products} />\n\n        {products.length > 0 ? (\n          <div>\n            <ProductList\n              products={products}\n              onChangeProductQuantity={this.onChangeProductQuantity}\n              onRemoveProduct={this.onRemoveProduct}\n            />\n\n            <Summary\n              products={products}\n              discount={this.state.discount}\n              tax={this.state.tax}\n              onEnterPromoCode={this.onEnterPromoCode}\n              checkPromoCode={this.checkPromoCode}\n            />\n          </div>\n        ) : (\n          <div className=\"empty-product\">\n            <h3>There are no products in your cart.</h3>\n            <button>Shopping now</button>\n          </div>\n        )}\n      </div>\n    );\n\n    //     function formatCurrency(value) {\n    // return Number(value).toLocaleString(\"en-US\", {\n    //   style: \"currency\",\n    //   currency: \"USD\"\n    // });\n  }\n}\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}