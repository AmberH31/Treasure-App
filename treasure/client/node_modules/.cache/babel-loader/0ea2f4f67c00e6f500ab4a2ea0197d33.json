{"ast":null,"code":"var _jsxFileName = \"/Users/Ambee/Desktop/Homework/Treasure-App/treasure/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Login from \"./components/Login\"; // import Topnav from \"./components/Topnav\";\n\nimport Home from \"./components/Home\";\nimport Topnav from \"./components/Topnav\";\nimport Itemsinfo from \"./components/ItemsInfo\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loginUser = user => {//    this.setState({\n      //    user: user\n      //});\n      //async programming\n      //axios api calls will return promises.\n      //127.0.0.1 === localhost same thing\n      //http call methods:(they're conventions)\n      //post: create a new resource =>Create\n      //get=>Rread\n      //put=>Uupdate\n      //delete =>Ddlete\n      //axios.post(\"http://127.0.0.1:3000/login\",{username:\"\",password:\"\"},{headers:{}}).then((res)=>{\n      // if (res.data.success===true){ this.setState({user:user,isLoggedIn:true})}else{\n      //this.setState({loginFailed:true})\n      //}\n      //}).catch(console.log);\n    };\n\n    this.state = {\n      user: {\n        userName: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      isLoggedIn: true,\n      loginFailed: false,\n      productList: [],\n      page: \"\",\n      category: \"\"\n    };\n  } // componentDidMount() {\n  //   setTimeout(() => {\n  //     // pretend auto log in\n  //     this.setState({\n  //       user: {\n  //         userName: \"test_user\",\n  //         email: \"test@user\",\n  //         password: \"p@ssw0rd\"\n  //       },\n  //       isLoggedIn: true\n  //     });\n  //   }, 1000);\n  // }\n\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.isLoggedIn && React.createElement(Topnav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => // <Home />\n      //spread operator  can be used on both object & array [...props]              }\n      this.state.isLoggedIn ? React.createElement(Home, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }) : React.createElement(Login, Object.assign({}, props, {\n        isLoggedIn: this.state.isLoggedIn,\n        loginUser: this.loginUser,\n        user: this.state.user,\n        loginFailed: this.state.loginFailed //overwrite these three values\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/itemsinfo\",\n      component: itemsinfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Ambee/Desktop/Homework/Treasure-App/treasure/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","Login","Home","Topnav","Itemsinfo","App","constructor","props","loginUser","user","state","userName","email","password","isLoggedIn","loginFailed","productList","page","category","render","itemsinfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAO,sDAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA8BnBC,SA9BmB,GA8BPC,IAAI,IAAI,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KA/CkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE;AACJE,QAAAA,QAAQ,EAAE,EADN;AAEJC,QAAAA,KAAK,EAAE,EAFH;AAGJC,QAAAA,QAAQ,EAAE;AAHN,OADK;AAMXC,MAAAA,UAAU,EAAE,IAND;AAOXC,MAAAA,WAAW,EAAE,KAPF;AAQXC,MAAAA,WAAW,EAAE,EARF;AASXC,MAAAA,IAAI,EAAE,EATK;AAUXC,MAAAA,QAAQ,EAAE;AAVC,KAAb;AAYD,GAfyB,CAiB1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAqBAC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWI,UAAX,IAAyB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD5B,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,GAFP;AAGE,MAAA,MAAM,EAAEP,KAAK,IACX;AACA;AACA,WAAKG,KAAL,CAAWI,UAAX,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAGE,oBAAC,KAAD,oBACMP,KADN;AAEE,QAAA,UAAU,EAAE,KAAKG,KAAL,CAAWI,UAFzB;AAGE,QAAA,SAAS,EAAE,KAAKN,SAHlB;AAIE,QAAA,IAAI,EAAE,KAAKE,KAAL,CAAWD,IAJnB;AAKE,QAAA,WAAW,EAAE,KAAKC,KAAL,CAAWK,WAL1B,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAuBE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEK,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF,CADF,CAFF,CADF;AAkCD;;AArFyB;;AAwF5B,eAAef,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Login from \"./components/Login\";\n// import Topnav from \"./components/Topnav\";\nimport Home from \"./components/Home\";\nimport Topnav from \"./components/Topnav\";\nimport Itemsinfo from \"./components/ItemsInfo\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        userName: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      isLoggedIn: true,\n      loginFailed: false,\n      productList: [],\n      page: \"\",\n      category: \"\"\n    };\n  }\n\n  // componentDidMount() {\n  //   setTimeout(() => {\n  //     // pretend auto log in\n  //     this.setState({\n  //       user: {\n  //         userName: \"test_user\",\n  //         email: \"test@user\",\n  //         password: \"p@ssw0rd\"\n  //       },\n  //       isLoggedIn: true\n  //     });\n  //   }, 1000);\n  // }\n\n  loginUser = user => {\n    //    this.setState({\n    //    user: user\n    //});\n    //async programming\n    //axios api calls will return promises.\n    //127.0.0.1 === localhost same thing\n    //http call methods:(they're conventions)\n    //post: create a new resource =>Create\n    //get=>Rread\n    //put=>Uupdate\n    //delete =>Ddlete\n    //axios.post(\"http://127.0.0.1:3000/login\",{username:\"\",password:\"\"},{headers:{}}).then((res)=>{\n    // if (res.data.success===true){ this.setState({user:user,isLoggedIn:true})}else{\n    //this.setState({loginFailed:true})\n    //}\n    //}).catch(console.log);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.isLoggedIn && <Topnav />}\n        <Router>\n          <div className=\"container-fluid\">\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={props =>\n                  // <Home />\n                  //spread operator  can be used on both object & array [...props]              }\n                  this.state.isLoggedIn ? (\n                    <Home />\n                  ) : (\n                    <Login\n                      {...props}\n                      isLoggedIn={this.state.isLoggedIn}\n                      loginUser={this.loginUser}\n                      user={this.state.user}\n                      loginFailed={this.state.loginFailed}\n                      //overwrite these three values\n                    />\n                  )\n                }\n              />\n              {/* <Route path=\"/sign-in\" component={Login} /> */}\n              {/* <Route path=\"/home\" component={Home} /> */}\n              <Route path=\"/itemsinfo\" component={itemsinfo} />\n            </Switch>\n          </div>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}