{"ast":null,"code":"var _jsxFileName = \"/Users/Ambee/Desktop/Homework/Treasure-App/treasure/client/src/App.js\";\nimport React, { Component } from \"react\"; // import utils from \"./utils/API\";\n\nimport \"./App.css\"; // import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup/Signup\"; // import Topnav from \"./components/Topnav\";\n\nimport Home from \"./components/Home\";\nimport Topnav from \"./components/Topnav\";\nimport ItemsInfo from \"./components/ItemsInfo\";\nimport data from \"./camera.json\";\nimport Cart from \"./components/Cart/Cart\";\nimport API from \"./components/utils/API\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loginUser = user => {\n      // this.setState({\n      //   // user: user\n      // });\n      API.doPost(\"/api/login\", user, data => {\n        console.log(data);\n        localStorage.setItem([]);\n        this.setState({\n          user: data.user,\n          isLoggedIn: true\n        });\n      }); //async programming\n      //axios api calls will return promises.\n      //127.0.0.1 === localhost same thing\n      //http call methods:(they're conventions)\n      //post: create a new resource =>Create\n      //get=>Rread\n      //put=>Uupdate\n      //delete =>Ddlete\n      //axios.post(\"http://127.0.0.1:3000/login\",{username:\"\",password:\"\"},{headers:{}}).then((res)=>{\n      // if (res.data.success===true){ this.setState({user:user,isLoggedIn:true})}else{\n      //this.setState({loginFailed:true})\n      //}\n      //}).catch(console.log);\n    };\n\n    this.state = {\n      user: {\n        userName: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      isLoggedIn: false,\n      loginFailed: false,\n      productList: [],\n      page: \"\",\n      category: \"\"\n    };\n  } // componentDidMount() {\n  //   setTimeout(() => {\n  //     // pretend auto log in\n  //     this.setState({\n  //       user: {\n  //         userName: \"test_user\",\n  //         email: \"test@user\",\n  //         password: \"p@ssw0rd\"\n  //       },\n  //       isLoggedIn: true\n  //     });\n  //   }, 1000);\n  // }\n\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.isLoggedIn && React.createElement(Topnav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => // <Home />\n      //spread operator  can be used on both object & array [...props]              }\n      this.state.isLoggedIn ? React.createElement(Home, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }) : React.createElement(Login, Object.assign({}, props, {\n        data: data,\n        isLoggedIn: this.state.isLoggedIn,\n        loginUser: this.loginUser,\n        user: this.state.user,\n        loginFailed: this.state.loginFailed //overwrite these three values\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/itemsinfo\",\n      component: ItemsInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/cart\",\n      component: Cart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      component: Signup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Ambee/Desktop/Homework/Treasure-App/treasure/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","Login","Signup","Home","Topnav","ItemsInfo","data","Cart","API","App","constructor","props","loginUser","user","doPost","console","log","localStorage","setItem","setState","isLoggedIn","state","userName","email","password","loginFailed","productList","page","category","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import utils from \"./utils/API\";\nimport \"./App.css\";\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup/Signup\";\n\n// import Topnav from \"./components/Topnav\";\nimport Home from \"./components/Home\";\nimport Topnav from \"./components/Topnav\";\nimport ItemsInfo from \"./components/ItemsInfo\";\nimport data from \"./camera.json\";\nimport Cart from \"./components/Cart/Cart\";\nimport API from \"./components/utils/API\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        userName: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      isLoggedIn: false,\n      loginFailed: false,\n      productList: [],\n      page: \"\",\n      category: \"\"\n    };\n  }\n\n  // componentDidMount() {\n  //   setTimeout(() => {\n  //     // pretend auto log in\n  //     this.setState({\n  //       user: {\n  //         userName: \"test_user\",\n  //         email: \"test@user\",\n  //         password: \"p@ssw0rd\"\n  //       },\n  //       isLoggedIn: true\n  //     });\n  //   }, 1000);\n  // }\n\n  loginUser = user => {\n    // this.setState({\n    //   // user: user\n    // });\n\n    API.doPost(\"/api/login\", user, data => {\n      console.log(data);\n      localStorage.setItem([])\n      this.setState({\n        user: data.user,\n        isLoggedIn: true\n      });\n    });\n\n    //async programming\n    //axios api calls will return promises.\n    //127.0.0.1 === localhost same thing\n    //http call methods:(they're conventions)\n    //post: create a new resource =>Create\n    //get=>Rread\n    //put=>Uupdate\n    //delete =>Ddlete\n    //axios.post(\"http://127.0.0.1:3000/login\",{username:\"\",password:\"\"},{headers:{}}).then((res)=>{\n    // if (res.data.success===true){ this.setState({user:user,isLoggedIn:true})}else{\n    //this.setState({loginFailed:true})\n    //}\n    //}).catch(console.log);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.isLoggedIn && <Topnav />}\n        <Router>\n          <div className=\"container-fluid\">\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={props =>\n                  // <Home />\n                  //spread operator  can be used on both object & array [...props]              }\n                  this.state.isLoggedIn ? (\n                    <Home />\n                  ) : (\n                    <Login\n                      {...props}\n                      data={data}\n                      isLoggedIn={this.state.isLoggedIn}\n                      loginUser={this.loginUser}\n                      user={this.state.user}\n                      loginFailed={this.state.loginFailed}\n                      //overwrite these three values\n                    />\n                  )\n                }\n              />\n              {/* <Route path=\"/log-in\" component={Login} /> */}\n              {/* <Route path=\"/home\" component={Home} /> */}\n              <Route path=\"/itemsinfo\" component={ItemsInfo} />\n              <Route path=\"/cart\" component={Cart} />\n              <Route path=\"/signup\" component={Signup} />\n            </Switch>\n          </div>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}